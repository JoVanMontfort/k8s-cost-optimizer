name: Monitor Kubernetes Costs
on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC (1 AM CEST)
  workflow_dispatch:  # Enables manual triggering
jobs:
  check-metrics:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Ensure script permissions
      run: chmod +x scripts/check-metrics.sh
    - name: Install deps
      run: sudo apt-get update && sudo apt-get install -y curl jq python3
    - name: Run metric check
      id: check-metrics
      env:
        COCKPIT_TOKEN: ${{ secrets.COCKPIT_TOKEN }}
        DATA_SOURCE_ID: ${{ secrets.DATA_SOURCE_ID }}
        CLUSTER_NAME: k8s-triggeriq-fe-cluster
      run: |
        OUTPUT=$(./scripts/check-metrics.sh $COCKPIT_TOKEN $DATA_SOURCE_ID $CLUSTER_NAME)
        echo "$OUTPUT"
        CPU=$(echo "$OUTPUT" | grep -E "Cluster CPU usage|ERROR.*cluster CPU" | tail -1 | awk '{print $NF}' | tr -d '%')
        TRIGGERIQ_CPU=$(echo "$OUTPUT" | grep -E "triggeriq CPU|ERROR.*triggeriq CPU" | tail -1 | awk '{print $3}')
        NODE_COUNT=$(echo "$OUTPUT" | grep -E "Cluster node count|ERROR.*node count" | tail -1 | awk '{print $4}')
        HTTP_RATE=$(echo "$OUTPUT" | grep -E "triggeriq HTTP rate|ERROR.*HTTP rate" | tail -1 | awk '{print $4}')
        echo "cpu=${CPU:-unknown}" >> $GITHUB_OUTPUT
        echo "triggeriq_cpu=${TRIGGERIQ_CPU:-unknown}" >> $GITHUB_OUTPUT
        echo "node_count=${NODE_COUNT:-unknown}" >> $GITHUB_OUTPUT
        echo "http_rate=${HTTP_RATE:-unknown}" >> $GITHUB_OUTPUT
    - name: Notify Slack
      uses: slackapi/slack-github-action@v2.1.1
      with:
        method: chat.postMessage
        token: ${{ secrets.SLACK_TOKEN }}
        payload: |
          {
            "channel": "D09GZCRDRNE",
            "text": "Daily Cost Check for *${CLUSTER_NAME}*:\n*Cluster CPU*: ${{ steps.check-metrics.outputs.cpu }}%\n*triggeriq CPU*: ${{ steps.check-metrics.outputs.triggeriq_cpu }} mCPU\n*Node Count*: ${{ steps.check-metrics.outputs.node_count }}\n*triggeriq HTTP Rate*: ${{ steps.check-metrics.outputs.http_rate }} req/s"
          }
